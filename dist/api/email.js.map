{"version":3,"sources":["../../src/api/email.js"],"names":["req","res","createTestAccount","err","account","transporter","createTransport","service","auth","user","pass","find","sort","exec","users","json","eachSeries","callback","email","message","firstName","lastName","index","mailOptions","to","subject","text","html","sendMail","error","info","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,GAAD,EAAMC,GAAN,EAAc;AAC5B;AACA;AACA,sBAAWC,iBAAX,CAA6B,UAACC,GAAD,EAAMC,OAAN,EAAkB;;AAE9C;AACA,MAAIC,cAAc,qBAAWC,eAAX,CAA2B;AAC5CC,YAAS,OADmC;AAE5CC,SAAM;AACLC,UAAM,0BADD;AAELC,UAAM;AAFD;AAFsC,GAA3B,CAAlB;;AAUA,kBAAKC,IAAL,GAAYC,IAAZ,CAAiB,EAAE,SAAS,CAAX,EAAjB,EAAiCC,IAAjC,CAAsC,UAACV,GAAD,EAAMW,KAAN,EAAgB;AACrD,OAAIX,GAAJ,EACCF,IAAIc,IAAJ,CAASZ,GAAT;;AAED,mBAAMa,UAAN,CAAiBF,KAAjB,EAAwB,UAACL,IAAD,EAAOQ,QAAP,EAAoB;AAC3C;AACA,QAAGR,KAAKS,KAAL,IAAc,kCAAjB,EAAoD;AACnDD;AACA,KAFD,MAEM;AACL,SAAIE,UAAU,QAAQV,KAAKW,SAAb,GAAyB,GAAzB,GAA+BX,KAAKY,QAApC,GAA+C,2FAA/C,GAA6IZ,KAAKa,KAAhK;AACA,SAAIC,cAAc;AACjBC,UAAI,kCADa,EACuB;AACxCC,eAAS,oBAFQ,EAEc;AAC/BC,YAAMP,OAHW,EAGF;AACfQ,YAAMR,OAJW,CAIH;AAJG,MAAlB;;AAOA;AACAd,iBAAYuB,QAAZ,CAAqBL,WAArB,EAAkC,UAACM,KAAD,EAAQC,IAAR,EAAiB;AAClD,UAAID,KAAJ,EAAW;AACV,cAAOE,QAAQC,GAAR,CAAYH,KAAZ,CAAP;AACA;AACDZ;AACA,MALD;AAMA;AACD,IArBD,EAqBG,UAACY,KAAD,EAAW;AACbE,YAAQC,GAAR,CAAY,YAAZ;AACA/B,QAAIc,IAAJ,CAASD,KAAT;AACA,IAxBD;AAyBA,GA7BD;AA8BA,EA3CD;AA8CA,C","file":"email.js","sourcesContent":["import resource from 'resource-router-middleware';\nimport User from '../models/users';\nimport async from 'async';\nimport base64 from 'base-64';\nimport nodemailer from 'nodemailer';\n\nexport default (req, res) => {\n\t// Generate test SMTP service account from ethereal.email\n\t// Only needed if you don't have a real mail account for testing\n\tnodemailer.createTestAccount((err, account) => {\n\n\t\t// create reusable transporter object using the default SMTP transport\n\t\tlet transporter = nodemailer.createTransport({\n\t\t\tservice: 'gmail',\n\t\t\tauth: {\n\t\t\t\tuser: 'cabotdeveloper@gmail.com',\n\t\t\t\tpass: 'cabot1234'\n\t\t\t}\n\t\t});\n\n\t\t\n\n\t\tUser.find().sort({ \"index\": 1 }).exec((err, users) => {\n\t\t\tif (err)\n\t\t\t\tres.json(err);\n\t\t\t\n\t\t\tasync.eachSeries(users, (user, callback) => {\n\t\t\t\t// setup email data with unicode symbols\n\t\t\t\tif(user.email != 'midhun.darvin@cabotsolutions.com'){\n\t\t\t\t\tcallback();\n\t\t\t\t}else {\n\t\t\t\t\tlet message = 'Hi ' + user.firstName + ' ' + user.lastName + ',\\r\\n Click on this link to view your christmas friend \\r\\n http:\\/\\/localhost:3000\\/?id=' + user.index;\n\t\t\t\t\tlet mailOptions = {\n\t\t\t\t\t\tto: 'midhun.darvin@cabotsolutions.com', // list of receivers\n\t\t\t\t\t\tsubject: 'Christmas Friend âœ”', // Subject line\n\t\t\t\t\t\ttext: message, // plain text body\n\t\t\t\t\t\thtml: message // html body\n\t\t\t\t\t};\n\n\t\t\t\t\t// send mail with defined transport object\n\t\t\t\t\ttransporter.sendMail(mailOptions, (error, info) => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\treturn console.log(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\tconsole.log('Mails Sent');\n\t\t\t\tres.json(users);\n\t\t\t});\n\t\t});\n\t});\n\n\t\n};\n\n"]}